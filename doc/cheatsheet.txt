*cheatsheet.txt*  My personal Vim cheatsheet

My personal cheatsheet containing a collection of useful Vim motions that are 
easy to forget.

My Vim cheatsheet					*cheatsheet*

==============================================================================

1. Advanced Vim motions					*my-motions*

CTRL-Y	    Move screen down one line
CTRL-E	    Move screen up one line

CTRL-F	    Move forward one screen (like PageUp)
CTRL-B	    Move back one screen (like PageDown)

CTRL-D	    Scroll down half screen
CTRL-U	    Scroll up half screen

zt	    Scroll so that cursor is at the top of the screen
zb	    Scroll so that cursor is at the bottom of the screen
zz	    Scroll so that cursor is at the center of the screen

H	    Jump cursor to the top of the screel
L	    Jump cursor to the bottom of the screen
M	    Jump cursor to the center of the screen

%	    Jump to matching bracket

CTRL-E	    Go back
CTRL-I	    Go forward

See also:
    |motion.txt|
    |scroll.txt|

==============================================================================

2. Window management					*my-window*

CTRL-W S-T	Convert window to tab

:tab all	Open all files from commandline args in tabs
:tab sp		Duplicate current buffer into new tab

CTRL-Z		Switch to background mode (works anywhere in sh)
		Use 'fg' to return back to Vim

==============================================================================

3. Buffers						*my-buffers*

:bu[ffer] <Tab>	    Switch to another buffer, use <Tab> for autocomplete
:ls		    List buffers
:b{N}		    Switch to buffer {N}
:bd		    Close buffer
:enew		    Open new buffer

<CTRL-Shift-6>	    Quickly rotate between buffers

:set hidden	    Allow switching away from a buffer without saving
:set confirm	    Auto-prompt to save files on exit

==============================================================================

4. Searching						*my-searching*

:%s/{old}/{new}/g[c]	    Search and replace {old} with {new}, 'c' asks
			    for confirmation

:noh			    Clear all search highlights

:vimgrep /{pattern}/ {path} Search for {pattern} in {path}; to search 
			    recursively, use a path like '**/*.go'
			    |vimgrep|

:cope		Open the quickfix list with grep results
:ccl		Close the quickfix list with grep results
:lope		Open the location list with grep results
:lcl		Close the location list with grep results

:cn		Go to next item in the quickfix list
:cp		Go to previous item in the quickfix list
:ln		Go to next item in the location list
:lp		Go to previous item in the location list

CTRL-W <Enter>	Open item in new window

These options with with Neovim 0.11 |default-mappings| or vim-unimpaired.

]q	    Go to next item in the quickfix list
[q	    Go to previous item in the quickfix list
]l	    Go to next item in the location list
[l	    Go to previous item in the location list

==============================================================================

5. Autocomplete						*my-autocomplete*

CTRL-X CTRL-O	    Show completion window

When in autocompletion mode, the following options are available:

CTRL-N		    Use next match
CTRL-P		    Use previous match

CTRL-Y		    Use snippet (Neovim only) |lsp-completion|
		    <Tab> or <S-Tab> to jump between sections

See also: |compl-omni|

==============================================================================

6. LSP							*my-lsp*

Common options for both Vim and Neovim

gd	Go to definition
gD	Go to declaration
K	Hover
gra	Code actions
f	Format
grn	Rename symbol
grr	List all references to symbol ('\fr' but quicklist)
gri	List all implementations of symbol
gO	List all symbols in buffer
]d	Go to next diagnostic error
[d	Go to previous diagnostic error

CTRL-S		Show function signature (in edit mode)
CTRL-W S-]	Show definition in preview window
CTRL-W p	Jump to preview window
CTRL-W z	Close preview window

Vim LSP features

<Space>cc	Show code lens for current file
		Useful for checking 'go.mod' dependencies

Neovim LSP features

<Space>cc	Show code lens for current line
		Useful for checking 'go.mod' dependencies

<Space>cC	Refresh code lens

To use inlay hints, run the following commands:

Vim LSP	    ':LspInlayHints enable'
Neovim LSP  ':lua vim.lsp.inlay_hint.enable(true)'

==============================================================================

7. Misc

CTRL-G		Print current file path
CTRL-C		Exit Insert mode faster (skip timeouts and handlers)

"+y		Copy to OS clipboard (see also |yank|)

:set mouse=nvi	Enable mouse mode in all modes |mouse|
		Use ':' to temporarily disable mouse mode

:set mouse=	Disable mouse mode

:Lexplore	Open an explorer similar to other vim editors

Leader key is usually ',' or <Space>; default is '\'.

==============================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
